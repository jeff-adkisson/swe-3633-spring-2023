@startuml
left to right direction
class Context {
    + Context(textToScan:string?)
    + Matches : IEnumerable<Match> <<get>>
    + IsComplete : bool <<get>>
    + CurrentCharacter : char <<get>>
    + AddMatch() : void
    + AdvancePosition() : void
    + SetCurrentStartIndex() : void
}

class Finder <<static>> {
    + {static} Find(text:string?) : Match[]
}
note top of Finder : Executes state machine and returns Match array

class Match {
    + EmailAddress : string <<get>>
    + StartIndex : int <<get>>
}
Finder -- Match : 0..*

interface IState {
    GetNextState() : IState
}
class StateAddEmailAddress {
    + StateAddEmailAddress(context:Context)
    + <<override>> GetNextState() : IState
}
StateBase <|-- StateAddEmailAddress
abstract class StateBase {
    + StateBase (context:Context)
    + {abstract} GetNextState() : IState
}
IState <|-- StateBase
class StateCaptureDomain {
    + StateCaptureDomain(context:Context)
    + <<override>> GetNextState() : IState
}
StateBase <|-- StateCaptureDomain
class StateCaptureName {
    + StateCaptureName(context:Context)
    + <<override>> GetNextState() : IState
}
StateBase <|-- StateCaptureName
class StateCaptureTopLevelDomain {
    + StateCaptureTopLevelDomain(context:Context)
    + <<override>> GetNextState() : IState
}
StateBase <|-- StateCaptureTopLevelDomain
class StateStartOfWord {
    + StateStartOfWord(context:Context)
    + <<override>> GetNextState() : IState
}
class StateAdvanceToNextWord {
    + StateAdvanceToNextWord(context:Context)
    + <<override>> GetNextState() : IState
}
StateBase <|-- StateStartOfWord
StateBase <|-- StateAdvanceToNextWord
@enduml
